{"version":3,"file":"static/js/133.cb7c8135.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.js","services/services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsItem\":\"MovieDetails_movieDetailsItem__5wTbw\",\"detailsHeading\":\"MovieDetails_detailsHeading__v1c8v\",\"castLink\":\"MovieDetails_castLink__s+MYh\",\"reviewsLink\":\"MovieDetails_reviewsLink__epHcZ\",\"backLink\":\"MovieDetails_backLink__+2RHd\",\"detailsValue\":\"MovieDetails_detailsValue__cJHg6\",\"infoContainer\":\"MovieDetails_infoContainer__mpbBo\",\"movieDetailsList\":\"MovieDetails_movieDetailsList__gk9kL\",\"moviePoster\":\"MovieDetails_moviePoster__euBLG\",\"movieTitle\":\"MovieDetails_movieTitle__hhRe6\",\"noInfo\":\"MovieDetails_noInfo__qgtv6\"};","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieById } from 'services/services';\nimport noImage from '../../components/Cast/noimage.png';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from || '/');\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const getMovieDetails = async () => {\n      try {\n        const movieInfo = await fetchMovieById(movieId);\n        if (movieInfo) {\n          setDetails(movieInfo.data);\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current} className={css.backLink}>\n        Go back\n      </Link>\n      {isLoading && <Loader />}\n      {!isLoading && error && <p>There is no information about movie.</p>}\n      {details && (\n        <ul className={css.movieDetailsList}>\n          <li key={details.id} className={css.movieDetailsItem}>\n            <img\n              src={\n                details.backdrop_path\n                  ? `https://image.tmdb.org/t/p/w500${details.backdrop_path}`\n                  : details.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${details.poster_path}`\n                  : noImage\n              }\n              alt=\"movie poster\"\n              className={css.moviePoster}\n              width=\"450\"\n              height=\"300\"\n            />\n            <div className={css.infoContainer}>\n              <p className={css.detailsHeading}>\n                <b>Title:</b>\n              </p>\n              <p className={css.detailsValue}>\n                {details.title || details.original_title || details.name}\n              </p>\n              {details.release_date ? (\n                <p>({details.release_date.substring(0, 4)})</p>\n              ) : (\n                <p>Date not specified</p>\n              )}\n              <p className={css.detailsHeading}>\n                <b>User score:</b>\n              </p>\n              <p className={css.detailsValue}>\n                {details.vote_average && !isNaN(details.vote_average)\n                  ? Math.round(details.vote_average)\n                  : '-'}\n              </p>\n              <p className={css.detailsHeading}>\n                <b>Description:</b>\n              </p>\n              <p className={css.detailsValue}>{details.overview}</p>\n              <p className={css.detailsHeading}>\n                <b>Genres:</b>\n              </p>\n              <p className={css.detailsValue}>\n                {details.genres &&\n                  details.genres\n                    .map(genre => genre.name.toLowerCase())\n                    .join(', ')}\n              </p>\n            </div>\n          </li>\n        </ul>\n      )}\n      <Link to={`cast`} className={css.castLink}>\n        Cast\n      </Link>\n      <Link to={`reviews`} className={css.reviewsLink}>\n        Reviews\n      </Link>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst KEY = '85aded699850148534e98bbdd6991e7d';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","details","setDetails","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","error","setError","isLoading","setLoading","useEffect","getMovieDetails","fetchMovieById","movieInfo","data","response","status","to","current","className","css","Loader","src","backdrop_path","poster_path","noImage","alt","width","height","title","original_title","name","release_date","substring","vote_average","isNaN","Math","round","overview","genres","map","genre","toLowerCase","join","id","Suspense","fallback","KEY","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","results","console","log","URL","movie","fetchMovieCast","fetchMovieReviews","fetchSearchMovies","search","query"],"sourceRoot":""}