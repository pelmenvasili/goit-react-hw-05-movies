{"version":3,"file":"static/js/900.20976273.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castHeading\":\"Cast_castHeading__UcuiD\",\"actorName\":\"Cast_actorName__XabVA\",\"characterName\":\"Cast_characterName__R1bgC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport noImage from './noimage.png';\nimport { fetchMovieCast } from 'services/services';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    try {\n      setLoading(true);\n      const getMovieCast = async () => {\n        const movieCast = await fetchMovieCast(movieId);\n        setCast(movieCast.cast);\n      };\n      getMovieCast();\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setError(true);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return <p>There are no cast for this movie.</p>;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <h2>There are no cast for this movie.</h2>}\n      <h2 className={css.castHeading}>Cast</h2>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <li key={actor.id || actor.cast_id} className={css.castItem}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                  : noImage\n              }\n              className={css.castImage}\n              alt={actor.name}\n              width=\"150\"\n              height=\"225\"\n            />\n            <p>\n              <b className={css.actorName}>Name:</b> {actor.name}\n            </p>\n            <p>\n              <b className={css.characterName}>Character:</b> {actor.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst KEY = '85aded699850148534e98bbdd6991e7d';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","isLoading","setLoading","useEffect","getMovieCast","fetchMovieCast","movieCast","response","status","length","Loader","className","css","map","actor","src","profile_path","noImage","alt","name","width","height","character","id","cast_id","KEY","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","fetchMovieById","URL","movie","fetchMovieReviews","fetchSearchMovies","search","query"],"sourceRoot":""}