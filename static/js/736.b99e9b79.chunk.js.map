{"version":3,"file":"static/js/736.b99e9b79.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MoviesList.module.css?7a3b","components/MovieList/MoviesList.js","services/services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchInput\":\"Movies_searchInput__t20IP\",\"searchBtn\":\"Movies_searchBtn__tjXEL\"};","import { useState, useEffect } from 'react';\nimport { fetchSearchMovies } from 'services/services';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport MoviesList from 'components/MovieList/MoviesList';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [searchValue, setSearchValue] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchingMovies = async () => {\n      try {\n        setLoading(true);\n        const searchedMovies = await fetchSearchMovies(query);\n        setMovies(searchedMovies);\n      } catch (error) {\n        if (error.response && error.response.status === 404) {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchingMovies();\n  }, [query]);\n\n  const handleChangeInput = e => {\n    setSearchValue(e.target.value.trim());\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (searchValue !== '') {\n      setSearchParams({ query: searchValue });\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          placeholder=\"Search movies...\"\n          value={searchValue}\n          onChange={handleChangeInput}\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchBtn}>\n          Search\n        </button>\n      </form>\n      {isLoading && <Loader />}\n      {error && <h2>Data not available</h2>}\n      {movies.length > 0 && (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n      {movies.length === 0 && query !== '' && (\n        <p>No movies found with the title \"{query}\"</p>\n      )}\n    </div>\n  );\n};\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieTitle\":\"MoviesList_movieTitle__4c-8q\",\"moviePoster\":\"MoviesList_moviePoster__01Lhg\",\"movieList\":\"MoviesList_movieList__IROBh\",\"movieItem\":\"MoviesList_movieItem__MQ1mj\",\"container\":\"MoviesList_container__PoUp8\",\"movieLink\":\"MoviesList_movieLink__UE1Jg\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nimport noImage from '../Cast/noimage.png';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, state }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: state.from }}\n            className={css.movieLink}\n          >\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                  : noImage\n              }\n              alt={`${movie.title} poster`}\n              className={css.moviePoster}\n              width=\"250\"\n              height=\"350\"\n            />\n            <p className={css.movieTitle}>\n              {movie.title || movie.title_original || movie.name}\n            </p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      title_original: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ),\n  state: PropTypes.shape({\n    from: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\nconst KEY = '85aded699850148534e98bbdd6991e7d';\n\nexport const fetchTrendingMovies = async () => {\n  const URL = 'https://api.themoviedb.org/3/trending/all/day';\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const TrendingMovies = await axios.get(`${URL}?${options}`);\n    return TrendingMovies.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieById = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/credits`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  const URL = `https://api.themoviedb.org/3/movie/${id}/reviews`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async search => {\n  const URL = `https://api.themoviedb.org/3/search/movie`;\n  const options = new URLSearchParams({\n    api_key: KEY,\n    query: search,\n  });\n\n  try {\n    const movie = await axios.get(`${URL}?${options}`);\n    return movie.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","movies","setMovies","isLoading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","searchValue","setSearchValue","location","useLocation","useEffect","fetchingMovies","fetchSearchMovies","searchedMovies","response","status","className","css","onSubmit","e","preventDefault","placeholder","value","onChange","target","trim","type","Loader","length","MoviesList","state","from","map","movie","to","id","src","poster_path","noImage","alt","title","width","height","title_original","name","KEY","fetchTrendingMovies","options","URLSearchParams","api_key","axios","TrendingMovies","data","results","console","log","fetchMovieById","URL","fetchMovieCast","fetchMovieReviews","search"],"sourceRoot":""}