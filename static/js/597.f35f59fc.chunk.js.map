{"version":3,"file":"static/js/597.f35f59fc.chunk.js","mappings":"kNACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAgG,wBAAhG,EAAsI,0BAAtI,EAA4K,wBAA5K,EAAoN,4B,+DCqDpN,EAjDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAG,6CAAyCF,EAAzC,4BADO,mCACP,mBACT,GAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,MAAML,GACHM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIN,EAAQM,EAAKP,KAAjB,IACTQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACX,KAGF,iCACE,eAAIc,UAAWC,EAAf,mBACA,eAAID,UAAWC,EAAf,SACGb,EAAKc,KAAI,SAAAC,GAAK,OACb,gBAAmBH,UAAWC,EAA9B,UACGE,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CJ,UAAWC,EACXK,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAGT,gBACEJ,IAAKK,EACLJ,IAAI,cACJE,MAAM,MACNC,OAAO,MACPT,UAAWC,KAGf,0BACE,cAAGD,UAAWC,EAAd,mBADF,IAC0CE,EAAMI,SAEhD,0BACE,cAAGP,UAAWC,EAAd,wBADF,IACmDE,EAAMQ,eAtBlDR,EAAMS,GADF,QA8BtB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castHeading\":\"Cast_castHeading__UcuiD\",\"actorName\":\"Cast_actorName__XabVA\",\"characterName\":\"Cast_characterName__R1bgC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport noImage from './noimage.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const API_KEY = '85aded699850148534e98bbdd6991e7d';\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetch(URL)\n      .then(response => response.json())\n      .then(data => setCast(data.cast))\n      .catch(error => console.log(error));\n  }, [URL]);\n\n  return (\n    <>\n      <h2 className={css.castHeading}>Cast</h2>\n      <ul className={css.castList}>\n        {cast.map(actor => (\n          <li key={actor.id} className={css.castItem}>\n            {actor.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                className={css.castImage}\n                alt={actor.name}\n                width=\"150\"\n                height=\"225\"\n              />\n            ) : (\n              <img\n                src={noImage}\n                alt=\"placeholder\"\n                width=\"200\"\n                height=\"225\"\n                className={css.castImage}\n              ></img>\n            )}\n            <p>\n              <b className={css.actorName}>Name:</b> {actor.name}\n            </p>\n            <p>\n              <b className={css.characterName}>Character:</b> {actor.character}\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","URL","useState","cast","setCast","useEffect","fetch","then","response","json","data","catch","error","console","log","className","css","map","actor","profile_path","src","alt","name","width","height","noImage","character","id"],"sourceRoot":""}